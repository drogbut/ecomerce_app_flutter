import 'package:flutter/material.dart';

class DColors {
  DColors._();

  /// App Basics Colors
  static const Color primary = Color(0xFF4b68ff);
  static const Color secondary = Color(0xFFFFE24B);
  static const Color accent = Color(0xFFb0c7ff);

  /// Text Colors
  static const Color textPrimary = Color(0xFF333333);
  static const Color textSecondary = Color(0xFF6C7570);
  static const Color textWhite = Colors.white;

  /// Background colors
  static const Color light = Color(0xFFF6F6F6);
  static const Color dark = Color(0xFF272727);
  static const Color primaryBackground = Color(0xFFF3F5FF);

  /// Background container colors
  static const Color lightContainer = Color(0xFFF6F6F6);
  static const Color darkContainer = Color(0x1AFFFFFF);

  /// buttons colors
  static const Color buttonPrimary = Color(0xFFFFFFFF);
  static const Color buttonSecondary = Color(0xFF410002);
  static const Color buttonDisable = Color(0xff1D182A);

  /// Borders colors
  static const Color borderPrimary = Color(0xFF05203c);
  static const Color borderSecondary = Color(0xFF7A757F);

  /// Errors and validation colors
  static const Color error = Color(0xFF410002);
  static const Color success = Color(0xFFCFBDFF);
  static const Color warning = Color(0xFF05203c);
  static const Color info = Color(0xFF6D23F9);

  /// Neutral shades
  static const Color black = Color(0xFFCAC4CF);
  static const Color darkerGrey = Color(0xFF05203c);
  static const Color darkGrey = Color(0xFFF8FAFA);
  static const Color grey = Color(0xFF05203c);

  /// The PrimarySwatch was still set to a color generated by Flutter.
  /// Since you don't have to pass a color but a material color, you need method. ou could also do this manually for all shades. I found this solution better, because we can continue to create MaterialColors with it.
  static MaterialColor createMaterialColor(Color color) {
    List strengths = <double>[.05];
    final swatch = <int, Color>{};
    final int r = color.red, g = color.green, b = color.blue;

    for (int i = 1; i < 10; i++) {
      strengths.add(0.1 * i);
    }
    for (var strength in strengths) {
      final double ds = 0.5 - strength;
      swatch[(strength * 1000).round()] = Color.fromRGBO(
        r + ((ds < 0 ? r : (255 - r)) * ds).round(),
        g + ((ds < 0 ? g : (255 - g)) * ds).round(),
        b + ((ds < 0 ? b : (255 - b)) * ds).round(),
        1,
      );
    }
    return MaterialColor(color.value, swatch);
  }
}
